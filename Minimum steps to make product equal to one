class Solution {
    static int makeProductOne(int[] arr, int N) {
        int step = 0; // Total steps required
        int neg = 0;  // Count of negative numbers
        int zero = 0; // Count of zeros

        for (int i = 0; i < N; i++) {
            if (arr[i] > 1) {
                // Convert positive numbers greater than 1 to 1
                step += (arr[i] - 1);
            } else if (arr[i] < -1) {
                // Convert negative numbers less than -1 to -1
                step += (-1 - arr[i]);
                neg += 1;
            } else if (arr[i] == 0) {
                // Convert zeros to 1
                step += 1;
                zero += 1;
            } else if (arr[i] == -1) {
                // Count -1 as a negative number
                neg += 1;
            }
        }

        // If there is an odd count of negative numbers and no zero to neutralize it
        if (neg % 2 != 0 && zero == 0) {
            step += 2; // Convert one -1 to 1 (2 steps)
        }

        return step;
    }
}
